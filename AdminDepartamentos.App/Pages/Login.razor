@page "/login"

@using AdminDepartamentos.App.Models

@inject HttpClient Http
@inject TokenAuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation

<h3>Iniciar Sesion</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />
    
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
    </div>

    <div class="form-group">
        <label for="password">Contraseña</label>
        <InputText id="password" class="form-control" @bind-Value="loginModel.Password" />
    </div>
    
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Iniciar Sesion</button>
    </div>
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();
    private string errorMessage;

    private async Task HandleLogin()
    {
        var response = await Http.PostAsJsonAsync("api/account/login", loginModel);
        if (response.IsSuccessStatusCode)
        {
            var tokenResponse = await response.Content.ReadFromJsonAsync<TokenResponse>();
            await AuthStateProvider.MarkUserAsAuthenticated(tokenResponse.Token);
            Navigation.NavigateTo("/");
        }
        else
            errorMessage = "Usuario o contrasena incorrectos.";
    }
    
    public class TokenResponse
    {
        public string Token { get; set; }
    }
}
